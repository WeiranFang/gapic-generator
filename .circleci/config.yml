version: 2.0

jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
    working_directory: /tmp/workspace/gapic-generator
  install-toolkit:
    docker:
#      - image: googleapis/artman:0.14.3
      - image: circleci/openjdk:8-jdk
    working_directory: /tmp/workspace
    steps:
      - checkout:
          path: gapic-generator
      - run:
          command: ls gapic-generator
      - run:
          name: Checkout googleapis
          command: |
            mkdir -p googleapis
            git clone https://github.com/googleapis/googleapis.git googleapis
      - run:
          name: Build and install local toolkit
          command: |
            export RUNNING_IN_ARTMAN_DOCKER=True
            rm -rf gapic-generator/.git/
            gapic-generator/gradlew -p gapic-generator fatJar createToolPaths install build -x test
      - run:
          name: Make reports dir
          command: mkdir -p reports
      - persist_to_workspace:
          # Save all generated directories in workspace for later CircleCI jobs.
          root: /tmp/workspace
          paths:
            - googleapis
            - gapic-generator
            - reports
  run-generated-tests:
    docker:
#      - image: googleapis/artman:0.14.3
      - image: qnib/pytest
    environment:
      RUNNING_IN_ARTMAN_DOCKER: True
    working_directory: /tmp/
    parallelism: 2
    steps:
      - checkout: #TODO remove this
          path: workspace/gapic-generator
#      - attach_workspace:
#          # Use the workspace created in install-toolkit
#          at: workspace
      - run:
          name: Generate and run Java unit tests for Pubsub
          command: |
            cd workspace/gapic-generator
            mkdir /tmp/test_results
            circleci tests glob "smoketests/tests/test*.py" | circleci tests split
#            python smoketests/gapic_smoketest.py --user-config=artman_config.yaml java pubsub
      - store_test_results:
          path: /tmp/test_results
      - store_artifacts:
          path: /tmp/test_results

workflows:
  version: 2
  run_generated_tests:
    jobs:
      - run-generated-tests
#      - install-toolkit
#      - run-generated-tests:
#          requires:
#            - install-toolkit

machine:
  services:
    - docker