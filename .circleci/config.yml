version: 2.0

anchor_build: &anchor_build
  name: Build and install local toolkit
  command: |
    export RUNNING_IN_ARTMAN_DOCKER=True
    ./gradlew fatJar
    ./gradlew createToolPaths
    rm -rf /toolkit/.git/
    ./gradlew install build -x test
    export TOOLKIT_HOME=/gapic-generator

anchor_docker: &anchor_docker
  docker:
    - image: googleapis/artman:0.14.3
  working_directory: /gapic-generator

jobs:
  build:
    docker:
      - image: googleapis/git
    steps:
      - checkout
    working_directory: /gapic-generator
  install-toolkit:
    <<: *anchor_docker
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Checkout googleapis
          command: |
            git clone https://github.com/googleapis/googleapis.git /tmp/googleapis
      - run:
          name: Build and install local toolkit
          command: |
            export RUNNING_IN_ARTMAN_DOCKER=True
            ./gradlew fatJar
            ./gradlew createToolPaths
            rm -rf /toolkit/.git/
            ./gradlew install build -x test
            export TOOLKIT_HOME=/gapic-generator
            mkdir /tmp/reports
  run-generated-tests:
    <<: *anchor_docker
    parallelism: 3
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Generate and run Java unit tests for Pubsub
          command: |
            mkdir /tmp/reports
            python gapic_smoketest.py --user-config=artman_config.yaml java pubsub
      - run:
          name: Generate and run Java unit tests for Logging
          command: |
            mkdir /tmp/reports
            python gapic_smoketest.py --user-config=artman_config.yaml java logging
      - run:
          name: Generate and run Java unit tests for Speech
          command: |
            mkdir /tmp/reports
            python gapic_smoketest.py --user-config=artman_config.yaml java speech
      - store_test_results:
          path: /tmp/reports
      - store_artifacts:
          path: /tmp/reports

workflows:
  version: 2
  run_generated_tests:
    jobs:
      - build
      - install-toolkit:
          requires:
            - build
      - run-generated-tests:
          requires:
            - install-toolkit

machine:
  services:
    - docker
  docker_layer_caching: true