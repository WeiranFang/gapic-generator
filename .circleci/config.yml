version: 2.0

#anchor_test_env: &anchor_test_env
#  docker:
#    - image: googleapis/artman:0.14.3
#  environment:
#    RUNNING_IN_ARTMAN_DOCKER: True
#  working_directory: /tmp/

jobs:
  build:
    docker:
      - image: googleapis/git
    steps:
      - checkout
    working_directory: /tmp/workspace/gapic-generator
  generate-clients:
    docker:
#      - image: googleapis/artman:0.14.3
      - image: googleapis/git
    working_directory: /tmp/workspace
    steps:
      - checkout:
          path: gapic-generator
#      - run:
#          name: Checkout googleapis
#          command: |
#            mkdir -p googleapis
#            git clone https://github.com/googleapis/googleapis.git googleapis
#      - run:
#          name: Build and install local toolkit
#          command: |
#            export RUNNING_IN_ARTMAN_DOCKER=True
#            rm -rf gapic-generator/.git/
#            gapic-generator/gradlew -p gapic-generator fatJar createToolPaths install build -x test -x javadoc
#      - run:
#          name: Make reports directory
#          command: mkdir -p reports
#      - run:
#          name: Generate all client libraries
#          command: |
#            cd gapic-generator
#            python smoketests/gapic_smoketest.py \
#                --user-config=.circleci/artman_config.yaml \
#                --log=/tmp/workspace/reports/smoketest.log
      - run:
          name: Make dummy workspace directory
          command: |
            mkdir reports
            mkdir gapic-generator/artman-genfiles
            echo "hello world" > gapic-generator/artman-genfiles/hello.txt
      - store_artifacts:
          path: /tmp/workspace/reports
      - store_artifacts:
          path: /tmp/workspace/gapic-generator/artman-genfiles
      - persist_to_workspace:
          # Save all generated directories in workspace for later CircleCI jobs.
          root: /tmp/workspace
          paths:
            - gapic-generator/artman-genfiles
  test-java:
    working_directory: /tmp/
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - attach_workspace:
          # Use the workspace created in generate-clients
          at: workspace
      - run:
          name: Run all Java generated unit tests
          command: |
            cd gapic-generator/artman-genfiles/java
            ./gradlew build test
      - run:
          name: Save test results
          command: |
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} /tmp/workspace/reports/ \;
      - store_test_results:
          path: /tmp/workspace/reports
      - store_artifacts:
          path: /tmp/workspace/reports
  test-python:
    working_directory: /tmp/
    docker:
#      - image: circleci/openjdk:8-jdk
      - image: googleapis/nox:0.18.2
    steps:
      - attach_workspace:
          # Use the workspace created in generate-clients
          at: workspace
      - run:
          command: cat gapic-generator/artman-genfiles/hello.txt
#      - run:
#          name: Run nox on pubsub
#          command: |
#            cd workspace/gapic-generator/artman-genfiles/python/pubsub-v1
#            nox
#      - run:
#          name: Run nox on logging
#          command: |
#            cd workspace/gapic-generator/artman-genfiles/python/logging-v2
#            nox
#      - run:
#          name: Run nox on speech
#          command: |
#            cd workspace/gapic-generator/artman-genfiles/python/speech-v1
#            nox
#      - store_test_results:
#          path: /tmp/workspace/reports
#      - store_artifacts:
#          path: /tmp/workspace/reports

workflows:
  version: 2
  run_generated_tests:
    jobs:
      - generate-clients
      - test-java:
          requires:
            - generate-clients
      - test-python:
          requires:
            - generate-clients

machine:
  services:
    - docker